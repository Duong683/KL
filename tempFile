Tài liệu đào tạo viết mã khai thác
1. Viết shellcode
Kiến thức cần đạt được:

Hiểu phương pháp xây dựng shellcode
Xây dựng hoặc sửa một đoạn shellcode có sẵn theo mục đích của mình.
Tài liệu tham khảo:

Tham khảo các chương trình viết bằng assembly
Building your own Shell-codes
Shellcoding for Linux and Windows Tutorial
Thời gian thực hiện tối đa: 1 tuần

1. Viết shellcode trên hệ thống windows
Viết một đoạn shellcode cho phép chạy chương trình hiển chạy CALC.EXE
Viết một đoạn shellcode cho phép kết nối tới địa chỉ 127.0.0.1:1337 và thực hiện các lệnh được gửi từ xa
Mã chương trình để test shellcode:

char* Shellcode[] = {0x90,0x90,0x90,0x90,0x90,0x90};
DWORD oldProtect = 0;
if (VirtualProtect( Shellcode, sizeof(Shellcode), PAGE_EXECUTE_READWRITE, &oldProtect))
{
    funcShell = (int (*)()) pShellcode;
    (int)(*funcShell)();
}

2. Viết shellcode trên hệ thống linux
Viết một đoạn shellcode cho phép kết nối tới địa chỉ 127.0.0.1:1337 và thực hiện các lệnh được gửi từ xa
#include <stdio.h>
#include <string.h>

char *shellcode = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90";

int main(void)
{
fprintf(stdout,"Length: %d\n",strlen(shellcode));
(*(void(*)()) shellcode)();
return 0;
}
2. Lỗi Stack overflow
Kiến thức cần đạt được:

Hiểu nguyên nhân lỗi và cách sửa lỗi
Hiểu phương pháp phát hiện lỗi và ngăn ngừa lỗi của người lập trình (Sử dụng các hàm an toàn: strcpy_s...) và trình biên dịch(stack canary).
Hiểu cách bypass stack canary
Xây dựng mã khai thác
Hiểu cơ chế executable-space protection của hệ điều hành và các implement trên từng hệ điều hành (tên gọi NX trên linux hoặc "Data Execution Prevention" (DEP) trên windows).
Hiểu cách bypass executable-space protection.
Tài liệu tham khảo:

Bypassing Memory Protections: The Future of Exploitation
Whitepaper on Bypassing ASLR/DEP By Vinay Katoch Vulnerability Research Specialist
The Shellcoder's Handbook: Discovering and Exploiting Security Holes
ret2libc, Return Oriented Programming
Thời gian thực hiện tối đa: 2 tuần

Shellcode có thể chạy 1 chương trình CALC.exe hoặc connect về 1 server bất kì
Bài làm cần mô tả đầy đủ lỗi và có mã khai thác đi kèm
Mã khai thác có thể dùng ngôn ngữ tùy thích
1. Viết chương trình khai thác lỗi stack overflow trên windows
Thực hiện khai thác chương trình 2.1.exe
2. Viết chương trình khai thác lỗi stack overflow trên linux
Thực hiện khai thác chương trình 2.2
3. Viết chương trình khai thác lỗi stack overflow trên windows, có DEP
Thực hiện khai thác chương trình 2.3
4. Viết chương trình khai thác lỗi stack overflow trên linux, có NX
Thực hiện khai thác chương trình 2.4
2. Lỗi Format string
Kiến thức cần đạt được:

Hiểu nguyên nhân lỗi và cách sửa lỗi
Hiểu cơ chế Address space layout randomization (ASLR)
Xây dựng mã khai thác
Tài liệu tham khảo:

format_string_exploitation
formatstring-1.2
Step-By-Step-Format-String-Exploitation-On-Windows
Thời gian thực hiện tối đa: 1 tuần

1. Viết chương trình khai thác lỗi format string trên Windows
Thực hiện khai thác chương trình 3.1.exe
2. Viết chương trình khai thác lỗi format string trên Windows, có DEP, ASLR
Thực hiện khai thác chương trình 3.2
3. Viết chương trình khai thác lỗi format string trên Windows, có DEP, ASLR, GS
Thực hiện khai thác chương trình 3.3
3. Viết chương trình khai thác lỗi format string trên Linux, có NX, ASLR, Stack-canary
Thực hiện khai thác chương trình 3.4
